[{"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\index.js":"1","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\serviceWorker.js":"2","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\App.js":"3","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\themes\\theme.js":"4","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Login.js":"5","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Payments.js":"6","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\UploadSubmission.js":"7","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ViewContest.js":"8","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ViewSubmissions.js":"9","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Messaging.js":"10","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HomePage.jsx":"11","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContest.jsx":"12","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Signup.jsx":"13","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Profile.jsx":"14","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Header.js":"15","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\TextField.js":"16","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\SignUpButton.js":"17","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreditCard.js":"18","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\History.js":"19","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Transfer.js":"20","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ListPaymentOptions.js":"21","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\UploadPaper.js":"22","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\UploadButton.js":"23","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\NavButton.js":"24","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ContestSubmission.js":"25","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ContestDetailsPaper.js":"26","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ImageDisplayPaper.js":"27","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\AvailableUsers.js":"28","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\WinnerSnackbar.js":"29","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ImagePopUp.js":"30","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ConversationsList.js":"31","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Chatbox.js":"32","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ProfileSubmission.jsx":"33","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestRedirect.jsx":"34","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HomePagePaper.jsx":"35","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestPaper.jsx":"36","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\SignUpPaper.jsx":"37","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\SignUpPageButton.jsx":"38","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ProfileDetails.jsx":"39","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ProfilePaper.jsx":"40","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ImagesGrid.js":"41","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\BackToContestsListsButton.js":"42","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\StartNewChatButton.js":"43","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\MessageSendField.js":"44","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HomePageContest.jsx":"45","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestDatePicker.jsx":"46","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestButton.jsx":"47","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestPickDesign.jsx":"48","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\EditProfileButton.jsx":"49","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\TextFieldPrizeAmount.jsx":"50","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Image.js":"51","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\TextFieldLarge.jsx":"52","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\InspDesign.jsx":"53","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HistoryTable.js":"54","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\LoginPaper.js":"55","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\LoginPageButton.js":"56"},{"size":464,"mtime":1607737614140,"results":"57","hashOfConfig":"58"},{"size":5086,"mtime":1607737614157,"results":"59","hashOfConfig":"58"},{"size":1780,"mtime":1607737614139,"results":"60","hashOfConfig":"58"},{"size":319,"mtime":1607737614157,"results":"61","hashOfConfig":"58"},{"size":2809,"mtime":1607747589887,"results":"62","hashOfConfig":"58"},{"size":2284,"mtime":1607737614150,"results":"63","hashOfConfig":"58"},{"size":3418,"mtime":1607737614155,"results":"64","hashOfConfig":"58"},{"size":2974,"mtime":1607737614155,"results":"65","hashOfConfig":"58"},{"size":4011,"mtime":1607737614156,"results":"66","hashOfConfig":"58"},{"size":5210,"mtime":1607737614149,"results":"67","hashOfConfig":"58"},{"size":1453,"mtime":1607762214725,"results":"68","hashOfConfig":"58"},{"size":334,"mtime":1607746487930,"results":"69","hashOfConfig":"58"},{"size":2359,"mtime":1607762419121,"results":"70","hashOfConfig":"58"},{"size":885,"mtime":1607737614150,"results":"71","hashOfConfig":"58"},{"size":1078,"mtime":1607763412996,"results":"72","hashOfConfig":"58"},{"size":914,"mtime":1607737614153,"results":"73","hashOfConfig":"58"},{"size":856,"mtime":1607762347212,"results":"74","hashOfConfig":"58"},{"size":5559,"mtime":1607737614144,"results":"75","hashOfConfig":"58"},{"size":1903,"mtime":1607737614145,"results":"76","hashOfConfig":"58"},{"size":1681,"mtime":1607737614154,"results":"77","hashOfConfig":"58"},{"size":1719,"mtime":1607737614148,"results":"78","hashOfConfig":"58"},{"size":2052,"mtime":1607737614155,"results":"79","hashOfConfig":"58"},{"size":911,"mtime":1607737614155,"results":"80","hashOfConfig":"58"},{"size":608,"mtime":1607737614149,"results":"81","hashOfConfig":"58"},{"size":1556,"mtime":1607737614142,"results":"82","hashOfConfig":"58"},{"size":949,"mtime":1607737614142,"results":"83","hashOfConfig":"58"},{"size":1059,"mtime":1607737614147,"results":"84","hashOfConfig":"58"},{"size":1110,"mtime":1607737614140,"results":"85","hashOfConfig":"58"},{"size":1419,"mtime":1607737614156,"results":"86","hashOfConfig":"58"},{"size":1743,"mtime":1607737614147,"results":"87","hashOfConfig":"58"},{"size":2954,"mtime":1607737614142,"results":"88","hashOfConfig":"58"},{"size":3057,"mtime":1607737614141,"results":"89","hashOfConfig":"58"},{"size":1561,"mtime":1607737614151,"results":"90","hashOfConfig":"58"},{"size":875,"mtime":1607737614144,"results":"91","hashOfConfig":"58"},{"size":2761,"mtime":1607737614146,"results":"92","hashOfConfig":"58"},{"size":3451,"mtime":1607737614143,"results":"93","hashOfConfig":"58"},{"size":1102,"mtime":1607747472335,"results":"94","hashOfConfig":"58"},{"size":924,"mtime":1607743822133,"results":"95","hashOfConfig":"58"},{"size":1499,"mtime":1607737614150,"results":"96","hashOfConfig":"58"},{"size":2388,"mtime":1607737614151,"results":"97","hashOfConfig":"58"},{"size":1618,"mtime":1607737614147,"results":"98","hashOfConfig":"58"},{"size":888,"mtime":1607737614141,"results":"99","hashOfConfig":"58"},{"size":317,"mtime":1607737614153,"results":"100","hashOfConfig":"58"},{"size":1437,"mtime":1607737614149,"results":"101","hashOfConfig":"58"},{"size":1373,"mtime":1607737614146,"results":"102","hashOfConfig":"58"},{"size":1644,"mtime":1607737614143,"results":"103","hashOfConfig":"58"},{"size":955,"mtime":1607762247063,"results":"104","hashOfConfig":"58"},{"size":2020,"mtime":1607737614144,"results":"105","hashOfConfig":"58"},{"size":954,"mtime":1607737614144,"results":"106","hashOfConfig":"58"},{"size":1040,"mtime":1607737614154,"results":"107","hashOfConfig":"58"},{"size":2275,"mtime":1607737614147,"results":"108","hashOfConfig":"58"},{"size":1079,"mtime":1607737614154,"results":"109","hashOfConfig":"58"},{"size":1216,"mtime":1607737614148,"results":"110","hashOfConfig":"58"},{"size":2304,"mtime":1607737614145,"results":"111","hashOfConfig":"58"},{"size":1141,"mtime":1607747523042,"results":"112","hashOfConfig":"58"},{"size":898,"mtime":1607747568324,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1nfot5t",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\index.js",[],["242","243"],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\serviceWorker.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\App.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\themes\\theme.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Login.js",["244"],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Payments.js",["245","246","247","248"],"import React, { useState, Fragment } from \"react\";\r\nimport { Elements, StripeProvider } from 'react-stripe-elements';\r\nimport InjectedCreditCard from \"./CreditCard\";\r\nimport History from \"./History\";\r\nimport Transfer from \"./Transfer\";\r\nimport ListPaymentOptions from \"./ListPaymentOptions\"\r\nimport { Header } from './Header';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography, Grid, BottomNavigation, BottomNavigationAction } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nvar Payments = function () {\r\n    const classes = useStyles();\r\n\r\n    const [stripePage, setStripePage] = useState(null);\r\n    const stripePublishableKey = \"pk_test_3Ty6VUy1rfVdHm4JSOP1Uo8z00w8r5ooyx\"\r\n\r\n    let userID = 1;\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Grid container component=\"main\" className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid item xs={3} sm={3} md={3} >\r\n                    <ListPaymentOptions setStripePage={setStripePage} />\r\n                </Grid>\r\n                <Grid item xs={9} sm={9} md={9} component={Paper} elevation={6} square>\r\n                    <div className={classes.paper}>\r\n                        {stripePage === 'creditCard' &&\r\n                            <StripeProvider apiKey={stripePublishableKey}>\r\n                                <Elements>\r\n                                    <InjectedCreditCard userID={userID} />\r\n                                </Elements>\r\n                            </StripeProvider>\r\n                        }\r\n                        {stripePage === 'transfer' && <Transfer userID={userID} />}\r\n                        {stripePage === 'history' && <History userID={userID} />}\r\n                        {stripePage === 'profile' && <Typography>Profile</Typography>}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Payments;\r\n","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\UploadSubmission.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ViewContest.js",["249","250"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Header } from \"./Header\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Typography, Button, ButtonGroup } from '@material-ui/core';\r\nimport ProfileSubmission from \"./ProfileSubmission\";\r\nimport ContestSubmission from \"./ContestSubmission\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        width: \"1400px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        margin: \"50px 0\",\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"60px\",\r\n        boxShadow:\r\n            \"-5px -5px 10px 3px rgba(209, 209, 209, 0.15), 5px 5px 10px 3px rgba(209, 209, 209, 0.15)\",\r\n        borderRadius: \"0px\"\r\n    },\r\n    header: {\r\n        fontWeight: 600,\r\n        marginTop: \"50px\",\r\n    },\r\n    buttonSelected: {\r\n        borderRadius: \"0px\",\r\n        borderBottom: \"6px solid black\",\r\n        fontSize: \"18px\"\r\n    },\r\n    buttonUnselected: {\r\n        borderRadius: \"0px\",\r\n        color: \"gray\",\r\n        fontSize: \"18px\"\r\n    }\r\n}));\r\n\r\nexport function ViewContest() {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const fetchData = async (completed) => {\r\n        const res = await fetch(\"/contests?completed=\" + completed);\r\n        const json = await res.json();\r\n        setData([]);\r\n        setData(json)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(\"False\");\r\n    }, []\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Grid container justify=\"center\" alignItems=\"center\" className={classes.container}>\r\n                <Grid item xs={12}>\r\n                    <ButtonGroup fullWidth>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            className={(tab === 0) ? classes.buttonSelected : classes.buttonUnselected}\r\n                            onClick={() => { fetchData(\"False\"); setTab(0) }}\r\n                        >IN PROGRESS</Button>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            className={(tab === 1) ? classes.buttonSelected : classes.buttonUnselected}\r\n                            onClick={() => { fetchData(\"True\"); setTab(1) }}\r\n                        >COMPLETED</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Paper className={classes.paper}>\r\n                    {data.map(contest => (\r\n                        <ContestSubmission\r\n                            image={contest.image}\r\n                            title={contest.title}\r\n                            description={contest.description}\r\n                            prizeAmount={contest.prize}\r\n                            contestID={contest.contestid}\r\n                        />\r\n                    ))}\r\n                </Paper>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ViewSubmissions.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Messaging.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HomePage.jsx",["251","252","253","254","255","256"],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContest.jsx",["257"],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Signup.jsx",["258","259"],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Profile.jsx",["260","261","262","263"],"import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Typography } from '@material-ui/core';\r\n\r\nimport { Header } from \"./Header\";\r\nimport { SignUpButton } from \"./SignUpButton\";\r\nimport { ProfilePaper } from \"./ProfilePaper\";\r\nimport { ProfileDetails } from \"./ProfileDetails\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    width: \"70%\",\r\n    padding: \"5%\",\r\n    margin: \"5% 0\",\r\n    boxShadow:\r\n      \"-5px -5px 10px 3px rgba(209, 209, 209, 0.15), 5px 5px 10px 3px rgba(209, 209, 209, 0.15)\"\r\n  },\r\n  header: {\r\n    fontWeight: 600,\r\n    marginTop: \"5%\",\r\n  }\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header>\r\n        <SignUpButton />\r\n      </Header>\r\n      <ProfileDetails />\r\n      <ProfilePaper />\r\n    </Fragment>\r\n  )\r\n}\r\n","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Header.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\TextField.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\SignUpButton.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreditCard.js",["264"],"import React from \"react\";\r\nimport { CardElement, injectStripe } from 'react-stripe-elements';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nclass CreditCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            clientSecret: null,\r\n            last4: null,\r\n            brand: null,\r\n            expMonth: null,\r\n            expYear: null,\r\n            ccExists: null,\r\n            ccHeader: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            const response = await fetch(`/users/${this.props.userID}/payments/cc/info`);\r\n            const data = await response.json();\r\n            this.setState({\r\n                clientSecret: data['client_secret'],\r\n                last4: data['last4'],\r\n                brand: data['brand'],\r\n                expMonth: data['exp_month'],\r\n                expYear: data['exp_year'],\r\n                ccExists: data['last4'] ? true : false\r\n            });\r\n        })();\r\n    }\r\n\r\n    handleSubmit = async (ev) => {\r\n\r\n        ev.preventDefault();\r\n\r\n        const cardElement = this.props.elements.getElement('card');\r\n\r\n        const { setupIntent, error } = await this.props.stripe.confirmCardSetup(this.state.clientSecret, {\r\n            payment_method: {\r\n                card: cardElement,\r\n            },\r\n        });\r\n\r\n\r\n        if (error) {\r\n            console.log('Error occurred when confirming card details')\r\n        } else {\r\n            if (setupIntent.status === 'succeeded') {\r\n                const response = await fetch(`/users/${this.props.userID}/payments/cc/${this.state.ccExists ? 'update' : 'setup'}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ payment_method_id: setupIntent.payment_method })\r\n                });\r\n                console.log(await response.json());\r\n            }\r\n        }\r\n    }\r\n\r\n    style = {\r\n        base: {\r\n            color: '#32325d',\r\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n            fontSmoothing: 'antialiased',\r\n            fontSize: '16px',\r\n            '::placeholder': {\r\n                color: '#aab7c4'\r\n            }\r\n        },\r\n        invalid: {\r\n            color: '#fa755a',\r\n            iconColor: '#fa755a'\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                    <Typography variant=\"h6\" component=\"h6\">\r\n                        By adding your credit card information, you are authorizing Tattoo Art\r\n                        to charge this card each time you declare a contest winner.  The charge will\r\n                        be in the amount of the contest prize.\r\n                    </Typography>\r\n                </Grid>\r\n                {this.state.clientSecret &&\r\n                    <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                        <Typography variant=\"h6\" component=\"h6\">\r\n                            Current Card Details\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Card number: **** **** **** ${this.state.last4}`} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Expiration: ${this.state.expMonth} / ${this.state.expYear}`} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Brand: ${this.state.brand\r\n                                    && this.state.brand[0].toUpperCase() + this.state.brand.slice(1)}`} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Grid>}\r\n                <Grid item xs={4} sm={4} md={4} lg={4}>\r\n                    <form onSubmit={this.handleSubmit} id=\"payment-form\">\r\n                        <Grid container spacing={3} direction=\"column\" className=\"form-row\">\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Enter your credit card details:\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item id=\"card-element\">\r\n                                <CardElement style={this.style} />\r\n                            </Grid>\r\n                            <Grid item id=\"card-errors\" role=\"alert\"></Grid>\r\n                            <Grid item>\r\n                                <Button color=\"inherit\" variant=\"outlined\" type=\"submit\">\r\n                                    {this.state.ccExists ? 'Update' : 'Add'} credit card\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectStripe(CreditCard);","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\History.js",["265"],"import React, { useState } from \"react\";\r\nimport HistoryTable from \"./HistoryTable\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nvar History = function ({ userID }) {\r\n\r\n    const [paymentHistory, setPaymentHistory] = useState(null);\r\n    const [transferHistory, setTransferHistory] = useState(null);\r\n\r\n    function refundPayment(payment_intent_id) {\r\n        (async () => {\r\n            const response = await fetch(`/users/${userID}/payments/cc/refund`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ payment_intent_id: payment_intent_id })\r\n            });\r\n        })();\r\n    }\r\n\r\n    if (!paymentHistory) {\r\n        (async () => {\r\n            const response = await fetch(`/users/${userID}/payments/cc/history`);\r\n            setPaymentHistory(await response.json());\r\n        })();\r\n    }\r\n\r\n    if (!transferHistory) {\r\n        (async () => {\r\n            const response = await fetch(`/users/${userID}/payments/transfers/history`);\r\n            setTransferHistory(await response.json());\r\n        })();\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" component=\"h6\">Payments as a Contest Owner</Typography>\r\n                <HistoryTable history={paymentHistory} refundPayment={refundPayment} transactionType={\"payment\"} />\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" component=\"h6\">Transfers Received as Contest Winner</Typography>\r\n                <HistoryTable history={transferHistory} refundPayment={refundPayment} transactionType={\"transfer\"} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default History;","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Transfer.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ListPaymentOptions.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\UploadPaper.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\UploadButton.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\NavButton.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ContestSubmission.js",["266"],"import React, { useState, Fragment } from 'react';\r\nimport { makeStyles, Typography, Grid, Button } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginBottom: \"25px\"\r\n    },\r\n    image: {\r\n        height: \"250px\",\r\n        width: \"250px\",\r\n        objectFit: \"cover\"\r\n    },\r\n    title: {\r\n        fontWeight: \"600\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    description: {\r\n        color: \"gray\",\r\n    },\r\n    button: {\r\n        borderRadius: \"0px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n        marginTop: \"30px\",\r\n        marginBottom: \"20px\"\r\n    }\r\n}));\r\n\r\nexport default function ContestSubmission(props) {\r\n    const [image] = useState(props.image);\r\n    const [title] = useState(props.title);\r\n    const [description] = useState(props.description);\r\n    const [prizeAmount] = useState(props.prizeAmount);\r\n    const [contestID] = useState(props.contestID);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={3} className={classes.container}>\r\n                <Typography variant=\"h5\" className={classes.title}>{title}</Typography>\r\n                <Typography className={classes.description}>{description}</Typography>\r\n                <Button className={classes.button}>{'$' + prizeAmount}</Button>\r\n                <div> <Link to={`/view-submissions/${contestID}`}>Go to Contest</Link></div>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ContestDetailsPaper.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ImageDisplayPaper.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\AvailableUsers.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\WinnerSnackbar.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ImagePopUp.js",["267","268"],"import React from 'react';\r\nimport { makeStyles, Button, Dialog, DialogTitle, DialogContent, DialogActions, Typography, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  winnerButton: {\r\n    position: 'relative',\r\n  }\r\n}));\r\n\r\nexport function ImagePopUp(props) {\r\n  const classes = useStyles();\r\n\r\n  function declareWinner() {\r\n    (async () => {\r\n      const response = await fetch(`contests/${props.contestID}/submissions/winner`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ submission_id: props.submissionID })\r\n      });\r\n    })();\r\n\r\n    props.closePopUp();\r\n    props.openWinnerMsg();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.imagePopUpDisplayed}>\r\n        <DialogTitle>\r\n          <Typography variant=\"overline\">\r\n            Submitted by: /artistname/\r\n                </Typography>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <img width=\"100%\" height=\"100%\" src={props.imageURL} alt=\"submission-popup\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {!props.winnerDeclared && <Button color=\"default\" className={classes.winnerButton} onClick={declareWinner}>\r\n            Declare Winner\r\n                </Button>}\r\n          <Button color=\"default\" onClick={props.closePopUp} >\r\n            Close\r\n                </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ConversationsList.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Chatbox.js",["269"],"import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { Typography, Avatar } from \"@material-ui/core\";\r\nimport { MessageSendField } from \"./MessageSendField\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nconst styles = theme => ({\r\n  messagesContainer: {\r\n    backgroundColor: \"#f6f6f6\",\r\n    height: 450,\r\n    width: 1040,\r\n    marginTop: theme.spacing(8),\r\n    marginLeft: theme.spacing(30),\r\n    \"overflow-y\": \"auto\", \r\n    \"overflow-x\": \"hidden\"\r\n  },\r\n  messages: {\r\n    marginLeft: theme.spacing(3),\r\n    paddingTop: theme.spacing(1), \r\n    paddingBottom: theme.spacing(1)\r\n  }, \r\n  messageFromUserCard: {\r\n    height: 50, \r\n    borderRadius: 25, \r\n    boxShadow: \"0px 1px 5px 0px rgba(209, 209, 209, 0.9)\"\r\n  }, \r\n  messageToUserCard: {\r\n    height: 10, \r\n    borderRadius: 25, \r\n    boxShadow: \"0px 1px 5px 0px rgba(209, 209, 209, 0.9)\", \r\n  },\r\n  messageText: {\r\n    marginBottom: theme.spacing(10)\r\n  }\r\n});\r\n\r\nclass Chatbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputMessage: ''\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  sendMessage() {\r\n    this.props.onMessageSent(this.state.inputMessage)\r\n    this.setState({ inputMessage: '' })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Grid container className={classes.messagesContainer}>\r\n          {this.props.messages.map(convMessage => {\r\n            return (\r\n              <Grid key={convMessage.message_id} container direction=\"row\" spacing={1} alignItems=\"center\" className={classes.messages}>\r\n                <Grid item>\r\n                  <Avatar className={classes.avatar} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Card className={classes.messageFromUserCard}>\r\n                    <CardContent>\r\n                      <Typography adisplay=\"inline\" variant=\"subtitle2\" className={classes.messageText}>\r\n                        <div key={convMessage.message_id}>\r\n                          {convMessage.from_user.first_name + \":\" + \" \"}\r\n                          {convMessage.message_text}\r\n                        </div>\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n          }\r\n          )}\r\n        </Grid>\r\n        <MessageSendField\r\n          onMessageChange={this.handleInputChange}\r\n          onValueChange={this.state.inputMessage}\r\n          onClickSendButton={this.sendMessage}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nChatbox.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Chatbox); ","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ProfileSubmission.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestRedirect.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HomePagePaper.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestPaper.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\SignUpPaper.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\SignUpPageButton.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ProfileDetails.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ProfilePaper.jsx",["270"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Typography, Button, ButtonGroup } from '@material-ui/core';\r\nimport ProfileSubmission from \"./ProfileSubmission\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: \"1400px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    margin: \"50px 0\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: \"60px\",\r\n    boxShadow:\r\n      \"-5px -5px 10px 3px rgba(209, 209, 209, 0.15), 5px 5px 10px 3px rgba(209, 209, 209, 0.15)\",\r\n    borderRadius: \"0px\"\r\n  },\r\n  header: {\r\n    fontWeight: 600,\r\n    marginTop: \"50px\",\r\n  },\r\n  buttonSelected: {\r\n    borderRadius: \"0px\",\r\n    borderBottom: \"6px solid black\",\r\n    fontSize: \"18px\"\r\n  },\r\n  buttonUnselected: {\r\n    borderRadius: \"0px\",\r\n    color: \"gray\",\r\n    fontSize: \"18px\"\r\n  }\r\n}));\r\n\r\nexport function ProfilePaper() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const fetchData = async (completed) => {\r\n    const res = await fetch(\"http://localhost:5000/contests?completed=\" + completed + \"&user_id=1\");\r\n    const json = await res.json();\r\n    setData(json)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(\"False\");\r\n    }, []\r\n  )\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container justify=\"center\" alignItems=\"center\" className={classes.container}>\r\n        <Grid item xs={12}>\r\n          <ButtonGroup fullWidth>\r\n            <Button\r\n              variant=\"text\"\r\n              className={(tab === 0) ? classes.buttonSelected : classes.buttonUnselected}\r\n              onClick={() => {fetchData(\"False\"); setTab(0)}}\r\n            >IN PROGRESS</Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={(tab === 1) ? classes.buttonSelected : classes.buttonUnselected}\r\n              onClick={() => {fetchData(\"True\"); setTab(1)}}\r\n            >COMPLETED</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Paper className={classes.paper}>\r\n          {data.map(contest => (\r\n            <ProfileSubmission\r\n              image={contest.image}\r\n              title={contest.title}\r\n              description={contest.description}\r\n              prizeAmount={contest.prize}\r\n            />\r\n          ))}\r\n        </Paper>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\ImagesGrid.js",["271","272"],"import React, { Fragment } from 'react';\r\nimport { makeStyles, Grid, GridList, GridListTile, GridListTileBar, ListSubheader } from '@material-ui/core';\r\nimport { Image } from './Image';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  gridList: {\r\n    width: '100%',\r\n    height: '100%',\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  tilebar: {\r\n    height: 20,\r\n    marginBottom: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nexport function ImagesGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        <GridList cellHeight=\"auto\" className={classes.gridList} cols={5}>\r\n          {props.submissions.map((submission, i) => (\r\n            <Grid item className={classes.tile} key={i}>\r\n              <GridListTile key={submission}>\r\n                <Image imageClickHandler={props.imageClickHandler}\r\n                  imageURL={submission}\r\n                  submissionID={props.submissionIDs[i]}\r\n                  imageKey={props.submissionKeys[i]}\r\n                  winner={props.winnerID == props.submissionIDs[i] ? true : false} />\r\n                <GridListTileBar\r\n                  className={classes.tilebar}\r\n                  subtitle={<span>by: artistname</span>}\r\n                />\r\n              </GridListTile>\r\n            </Grid>\r\n          ))}\r\n        </GridList>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\BackToContestsListsButton.js",["273","274","275","276"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    fontFamily: theme.fontFamily,\r\n    fontSize: 10,\r\n    padding: 5\r\n  }\r\n}));\r\n\r\nexport function BackToContestsListButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    // <Button color=\"inherit\" className={classes.button}>\r\n    //   <ArrowBackIcon />\r\n    //   <Typography className={classes.title} variant=\"caption\">\r\n    //     Back to contests' list\r\n    //     </Typography>\r\n    // </Button>\r\n    <div>\r\n      <Link to=\"/view-contest\">Go back to all contests</Link>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\StartNewChatButton.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\MessageSendField.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HomePageContest.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestDatePicker.jsx",["277","278"],"import React, { useState }from 'react';\r\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport { KeyboardDatePicker, TimePicker } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"80%\",\r\n\t},\r\n\tcaption: {\r\n\t\tcolor: \"#000000\",\r\n\t\tmargin: \"10px 0\",\r\n\t\tfontWeight: 600,\r\n\t},\r\n\ttextfield: {\r\n\t\twidth: \"100%\",\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tmarginBottom: theme.spacing(5),\r\n\t\t\"& fieldset\": {\r\n\t\t\tborderRadius: 0,\r\n\t\t},\r\n  },\r\n  inputProps: {\r\n\t\tpadding: \"30px\",\r\n\t}\r\n}));\r\n\r\nexport function CreateContestDatePicker(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12}>\r\n\t\t\t\t<Typography align=\"left\" variant=\"h5\" className={classes.caption}>\r\n\t\t\t\t\tDeadline\r\n\t\t\t\t\t{/* {format(props.deadline, 'dd/MM/yyyy HH:mm')} */}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n      <Grid item xs={4}>\r\n        <KeyboardDatePicker\r\n\t\t\t\t\tvalue={props.deadline}\r\n\t\t\t\t\tclassName={classes.textfield}\r\n\t\t\t\t\tInputAdornmentProps={{ position: \"end\" }}\r\n\t\t\t\t\tinputProps={{className: classes.inputProps}}\r\n\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\tinputVariant=\"outlined\"\r\n          format=\"dd/MM/yyyy\"\r\n          onChange={props.setDeadline}\r\n          animateYearScrolling\r\n        />\r\n\t\t\t</Grid>\r\n      <Grid item xs={4}>\r\n\t\t\t\t<TimePicker\r\n\t\t\t\t\tvalue={props.deadline}\r\n\t\t\t\t\tclassName={classes.textfield}\r\n\t\t\t\t\tinputProps={{className: classes.inputProps}}\r\n\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\tinputVariant=\"outlined\"\r\n          onChange={props.setDeadline}\r\n        />\r\n\t\t\t</Grid>\r\n      <Grid item xs={4}>\r\n\t\t\t</Grid>\r\n    </Grid>\r\n  )\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestButton.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\CreateContestPickDesign.jsx",["279"],"import React, { useState, Fragment } from 'react';\r\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport { InspDesign } from './InspDesign';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  caption: {\r\n    color: \"#000000\",\r\n    margin: \"10px 0\",\r\n    fontWeight: 600,\r\n  },\r\n  container: {\r\n    border: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n    height: \"500px\",\r\n    margin: \"50px 0\",\r\n    padding: \"30px\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\n// Placeholder array for image URLs, implement to fetch from bucket after\r\nlet designsArray = [\"https://i.imgur.com/jbOoUbr.png\", \"https://i.imgur.com/uYZX8sA.png\",\r\n\"https://i.imgur.com/x47vWz3.png\", \"https://i.imgur.com/b1g6Vzv.png\", \"https://i.imgur.com/N5nuDoC.png\",\r\n\"https://i.imgur.com/9V2l7vZ.png\", \"https://i.imgur.com/EJ1PCA9.png\", \"https://i.imgur.com/b6qWOXx.png\",\r\n\"https://i.imgur.com/BrYdOxi.png\", \"https://i.imgur.com/iUUALda.png\", \"https://i.imgur.com/Q1Yp07G.png\"];\r\n// let i;\r\n// for (i = 1; i <= 11; i++) {\r\n//   designsArray.push('/designs/design' + i + '.png')\r\n// };\r\n\r\nexport function CreateContestPickDesign(props) {\r\n  const [designs] = useState(designsArray);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12}>\r\n          <Typography align=\"left\" variant=\"h5\" className={classes.caption}>\r\n            Which designs do you like?\r\n          </Typography>\r\n          {/* <p>{selected}</p> */}\r\n          <Typography align=\"left\">\r\n            Let's start by helping your designers understand which style you prefer.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.container}>\r\n          <Grid container spacing={2} justify=\"center\">\r\n            {designs.map((design, j) => (<InspDesign onClick={() => setSelected(designs[j])} imageURL={designs[j]} />))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\EditProfileButton.jsx",["280","281"],"import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    marginTop: \"20px\"\r\n  },\r\n  button: {\r\n    borderRadius: \"0\",\r\n    padding: theme.spacing(2, 3),\r\n    fontWeight: \"600\",\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}))\r\n\r\n\r\n\r\nexport function EditProfileButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.container}>\r\n        <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"contained-button-file\"\r\n          multiple\r\n          type=\"file\"\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n          <Button variant=\"outlined\" className={classes.button} component=\"span\"> \r\n            Edit Profile\r\n          </Button>\r\n        </label>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\TextFieldPrizeAmount.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\Image.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\TextFieldLarge.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\InspDesign.jsx",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\HistoryTable.js",["282"],"import React from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\n\r\nfunction HistoryTable(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"history table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Contest Title</TableCell>\r\n                        <TableCell align=\"right\">Contest ID</TableCell>\r\n                        <TableCell align=\"right\">Prize</TableCell>\r\n                        {props.transactionType === \"payment\" && <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.history && props.history.map(transaction => (\r\n                        <TableRow key={transaction['contest_id']}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {transaction['contest_title']}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{transaction[\"contest_id\"]}</TableCell>\r\n                            <TableCell align=\"right\">{transaction[\"amount\"]}</TableCell>\r\n                            {props.transactionType === \"payment\" && <TableCell align=\"right\">\r\n                                <Button color=\"primary\" onClick={e => props.refundPayment(transaction[\"transaction_id\"])}>\r\n                                    Request Refund\r\n                                </Button>\r\n                            </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default HistoryTable;","C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\LoginPaper.js",[],"C:\\Users\\Ron\\Desktop\\projects\\tattoo-art\\client\\src\\pages\\LoginPageButton.js",[],{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":83,"column":19,"nodeType":"289","endLine":83,"endColumn":30},{"ruleId":"290","severity":1,"message":"291","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":35},{"ruleId":"290","severity":1,"message":"294","line":9,"column":35,"nodeType":"292","messageId":"293","endLine":9,"endColumn":51},{"ruleId":"290","severity":1,"message":"295","line":9,"column":53,"nodeType":"292","messageId":"293","endLine":9,"endColumn":75},{"ruleId":"290","severity":1,"message":"296","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":17},{"ruleId":"290","severity":1,"message":"297","line":4,"column":23,"nodeType":"292","messageId":"293","endLine":4,"endColumn":33},{"ruleId":"290","severity":1,"message":"298","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":25},{"ruleId":"290","severity":1,"message":"299","line":2,"column":20,"nodeType":"292","messageId":"293","endLine":2,"endColumn":24},{"ruleId":"290","severity":1,"message":"300","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":15},{"ruleId":"290","severity":1,"message":"301","line":4,"column":35,"nodeType":"292","messageId":"293","endLine":4,"endColumn":41},{"ruleId":"290","severity":1,"message":"302","line":7,"column":10,"nodeType":"292","messageId":"293","endLine":7,"endColumn":22},{"ruleId":"290","severity":1,"message":"303","line":9,"column":10,"nodeType":"292","messageId":"293","endLine":9,"endColumn":31},{"ruleId":"290","severity":1,"message":"304","line":34,"column":20,"nodeType":"292","messageId":"293","endLine":34,"endColumn":31},{"ruleId":"290","severity":1,"message":"302","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":22},{"ruleId":"290","severity":1,"message":"302","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":22},{"ruleId":"290","severity":1,"message":"297","line":6,"column":16,"nodeType":"292","messageId":"293","endLine":6,"endColumn":26},{"ruleId":"290","severity":1,"message":"300","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":15},{"ruleId":"290","severity":1,"message":"305","line":3,"column":17,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"297","line":3,"column":23,"nodeType":"292","messageId":"293","endLine":3,"endColumn":33},{"ruleId":"290","severity":1,"message":"306","line":25,"column":9,"nodeType":"292","messageId":"293","endLine":25,"endColumn":16},{"ruleId":"290","severity":1,"message":"307","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":20},{"ruleId":"290","severity":1,"message":"308","line":13,"column":19,"nodeType":"292","messageId":"293","endLine":13,"endColumn":27},{"ruleId":"290","severity":1,"message":"309","line":32,"column":12,"nodeType":"292","messageId":"293","endLine":32,"endColumn":17},{"ruleId":"290","severity":1,"message":"310","line":2,"column":93,"nodeType":"292","messageId":"293","endLine":2,"endColumn":110},{"ruleId":"290","severity":1,"message":"308","line":25,"column":13,"nodeType":"292","messageId":"293","endLine":25,"endColumn":21},{"ruleId":"311","severity":1,"message":"312","line":75,"column":67,"nodeType":"313","messageId":"314","endLine":75,"endColumn":68},{"ruleId":"290","severity":1,"message":"297","line":3,"column":23,"nodeType":"292","messageId":"293","endLine":3,"endColumn":33},{"ruleId":"290","severity":1,"message":"315","line":2,"column":69,"nodeType":"292","messageId":"293","endLine":2,"endColumn":82},{"ruleId":"316","severity":1,"message":"317","line":39,"column":42,"nodeType":"313","messageId":"318","endLine":39,"endColumn":44},{"ruleId":"290","severity":1,"message":"301","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":16},{"ruleId":"290","severity":1,"message":"297","line":3,"column":18,"nodeType":"292","messageId":"293","endLine":3,"endColumn":28},{"ruleId":"290","severity":1,"message":"319","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":21},{"ruleId":"290","severity":1,"message":"306","line":22,"column":9,"nodeType":"292","messageId":"293","endLine":22,"endColumn":16},{"ruleId":"290","severity":1,"message":"320","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"321","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":16},{"ruleId":"290","severity":1,"message":"322","line":35,"column":10,"nodeType":"292","messageId":"293","endLine":35,"endColumn":18},{"ruleId":"290","severity":1,"message":"305","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":14},{"ruleId":"290","severity":1,"message":"297","line":3,"column":16,"nodeType":"292","messageId":"293","endLine":3,"endColumn":26},{"ruleId":"290","severity":1,"message":"297","line":2,"column":22,"nodeType":"292","messageId":"293","endLine":2,"endColumn":32},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'ProfileSubmission' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'SignUpButton' is defined but never used.","'CreateContestRedirect' is defined but never used.","'setRedirect' is assigned a value but never used.","'Grid' is defined but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","'response' is assigned a value but never used.","'image' is assigned a value but never used.","'ClickAwayListener' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'ListSubheader' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'ArrowBackIcon' is defined but never used.","'useState' is defined but never used.","'format' is defined but never used.","'selected' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]